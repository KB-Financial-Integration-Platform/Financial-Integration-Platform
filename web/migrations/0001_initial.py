# Generated by Django 4.1.2 on 2022-10-13 17:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("age", models.CharField(max_length=50)),
                ("child", models.CharField(max_length=10)),
                ("Marriage", models.CharField(max_length=10)),
                ("work", models.CharField(max_length=10)),
                ("work_address", models.CharField(max_length=100)),
                ("hope_address", models.CharField(max_length=100)),
                ("available_asset", models.IntegerField()),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("users", models.CharField(max_length=100)),
                ("asset_5", models.IntegerField()),
                ("asset_6", models.IntegerField()),
                ("asset_7", models.IntegerField()),
                ("asset_8", models.IntegerField()),
                ("asset_9", models.IntegerField()),
                ("asset_10", models.IntegerField()),
                ("net_5", models.IntegerField()),
                ("net_6", models.IntegerField()),
                ("net_7", models.IntegerField()),
                ("net_8", models.IntegerField()),
                ("net_9", models.IntegerField()),
                ("net_10", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Card",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.CharField(max_length=100)),
                ("card_name", models.CharField(max_length=100)),
                ("benefit1", models.CharField(max_length=100)),
                ("benefit2", models.CharField(max_length=100)),
                ("benefit3", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Saving",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.CharField(max_length=100)),
                ("saving_name", models.CharField(max_length=100)),
                ("period", models.CharField(max_length=100)),
                ("price", models.CharField(max_length=100)),
                ("interest_rate", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Consume",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("food", models.IntegerField()),
                ("cafe", models.IntegerField()),
                ("shopping", models.IntegerField()),
                ("education", models.IntegerField()),
                ("leisure", models.IntegerField()),
                ("medical", models.IntegerField()),
                ("traffic", models.IntegerField()),
                ("life", models.IntegerField()),
                ("travel", models.IntegerField()),
                (
                    "username",
                    models.ForeignKey(
                        db_column="username",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
